<routes xmlns="http://camel.apache.org/schema/spring">

	<route id="start-broker-flow-route" errorHandlerRef="defaultEH">
		<from uri="direct:start-broker-flow" />
		<log message="Camel Reference Context Broker Flow Start" />
		<to uri="bean:routerFlowManagerService?method=startBrokerFlow" />
	</route>

	<route id="execute-crud-operations-route" errorHandlerRef="dlc">
		<from uri="direct:execute-crud-operations" />
		<log message="Context : execute-crud-operations-route" />
		<to
			uri="bean:routerFlowManagerService?method=executeCrudOperations" />
		<choice>
			<when>
				<header>error</header>
				<log
					message="[semantic-inf-broker.camel.execute-crud-operations-route] Error: ${exception.message} no post operations will be executed "
					loggingLevel="ERROR" />

			</when>
			<otherwise>
				<log message="[semantic-inf-broker.camel.execute-crud-operations-route]: before WireTape to Process Background" />
				<setHeader headerName="theBody">
					<simple>${body}</simple>
				</setHeader>
				<wireTap uri="seda:get-scripts-and-nodereds" />
				<setBody>
					<simple>${in.header.theBody}</simple>
				</setBody>
			</otherwise>
		</choice>
	</route>

	<route id="get-scripts-and-nodereds-route"
		errorHandlerRef="defaultEH">
		<from uri="seda:get-scripts-and-nodereds" />
		<log message="[semantic-inf-broker.camel.get-scripts-and-nodereds-route]: Preprocessing Advicers" />
		<to
			uri="bean:routerFlowManagerService?method=getScriptsAndNodereds" />

		<choice>
			<when>
				<header>endpoints</header>
				<log message="[semantic-inf-broker.camel.get-scripts-and-nodereds-route]: Postprocessing pending calls"
					loggingLevel="INFO" />
				<to uri="direct:split-aggregate-calls" />
			</when>
			<otherwise>
				<log message="[semantic-inf-broker.camel.get-scripts-and-nodereds-route]: We have not Postprocessing calls"
					loggingLevel="INFO" />
			</otherwise>
		</choice>

	</route>

	<route id="split-aggregate-calls-route"
		errorHandlerRef="defaultEH">

		<from uri="direct:split-aggregate-calls" />
		<log message="Headers -> ${header.endpoints}" loggingLevel="INFO" />
		<setHeader headerName="theBody">
			<simple>${body}</simple>
		</setHeader>
		<choice>
			<when>
				<header>endpoints</header>
				<split parallelProcessing="true" streaming="true">
					<simple>${in.header.endpoints}</simple>
					<log message="[semantic-inf-broker.camel.split-aggregate-calls-route]: Call ${header.CamelSplitIndex} Advicer" />
					<to uri="direct:advice-scripts-and-nodereds" />
				</split>
			</when>
			<otherwise>
				<log message="[semantic-inf-broker.camel.split-aggregate-calls-route]: NO Endpoints will be applied" />
			</otherwise>
		</choice>

		<setBody>
			<simple>${in.header.theBody}</simple>
		</setBody>
		<log message="[semantic-inf-broker.camel.split-aggregate-calls-route]: Camel Reference Context Broker Flow End" />
	</route>

	<route id="advice-scripts-and-nodereds-route"
		errorHandlerRef="dlc">
		<from uri="direct:advice-scripts-and-nodereds" />
		<log message="[semantic-inf-broker.camel.advice-scripts-and-nodereds-route]: Calling Advice Processor" />
		<doTry>
			<to
				uri="bean:routerFlowManagerService?method=adviceScriptsAndNodereds" />
			<doCatch>
				<exception>java.lang.NullPointerException</exception>
				<exception>java.lang.Exception</exception>
				<log message="[semantic-inf-broker.camel.advice-scripts-and-nodereds-route]: Error processing Script Event: ${exception.message}"
					loggingLevel="ERROR" />
			</doCatch>
		</doTry>

	</route>

</routes>