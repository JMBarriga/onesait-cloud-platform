security.ignored: /**

management.security.enabled: false

## Config Web Server
server:
   port: 19000
   contextPath: /iot-broker
spring:
  application.name: onesaitplatform-iot-broker
  datasource:
    url: jdbc:mysql://localhost:3306/onesaitplatform_config?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
    username: root
    password: changeIt!
    driver-class-name: com.mysql.jdbc.Driver  
    test-while-idle: true
    test-on-borrow: true
    validation-query: SELECT 1        
    tomcat:
      # Number of ms to wait before throwing an exception if no connection is available.
      max-wait: 10000
      # Maximum number of active connections that can be allocated from this pool at the same time.
      max-active: 50
  jpa:
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      hibernate.ddl-auto: validate
      # Hibernate ddl auto (create, create-drop, validate, update
      properties:
        hibernate:
          #temp.use_jdbc_metadata_defaults: false
          format_sql: false
          show_sql: false
          ddl-auto: validate
          
          #cache:
           # use_second_level_cache: false
            #use_query_cache: true
            #region.factory_class: com.hazelcast.hibernate.HazelcastCacheRegionFactory
            #hazelcast:
             # configuration_file_path: hazelcast-client.xml
              #use_native_client: true
              #native_client_address: localhost
              #native_client_group: onesaitplatform
              #native_client_password: onesaitplatform
                       
          
  boot.admin: #Spring Boot Admin Config    
    url: http://localhost:18100
    username: operations
    password: changeIt!
    client.metadata.user.name: ${spring.boot.admin.username}
    client.metadata.user.password: ${spring.boot.admin.password} 

spring.elasticsearch.jest.uris: ${onesaitplatform.database.elasticsearch.sql.connector.http.endpoint}
spring.elasticsearch.jest.read-timeout: ${onesaitplatform.database.elasticsearch.sql.connectionTimeout.millis}

    
onesaitplatform: #Config onesait Platform specific
  database.elasticsearch:
      database: onesaitplatform_rtdb_es
      sql.maxHttpConnections: 10
      sql.maxHttpConnectionsPerRoute: 10
      sql.connectionTimeout.millis: 10000
      sql.connector.http.endpoint: http://localhost:9200
      url: localhost
      port: 9300
  database.mongodb:
    database: onesaitplatform_rtdb
    authenticationDatabase:  #admin
    servers: localhost:27017
    autoConnectRetry: true
    socketTimeout: 5000
    maxAutoConnectRetryTime: 5000
    maxWaitTime: 5000
    useAuth: false
    username: #username
    password: #password
    readFromSecondaries: false
    queries.executionTimeout: 5000
    queries.defaultLimit: 1000
    queries.maxConcurrentQueries: 3
    writeConcern: UNACKNOWLEDGED
    tools.mongoexport.path: mongoexport
    tools.mongoimport.path: mongoimport
    tools.mongoshell.path: mongo
    tools.useSequentialOps: true
  
  router.avoidsslverification: true
  router.alternativeURL: http://localhost:20000/router/router/   
  router:
    client:
      rest:
        connect-timeout: 30000
        request-timeout: 30000
        socket-timeout: 60000
        max-total-connections: 100
        default-keep-alive-time-millis: 20000
        close-idle-connection-wait-time-secs: 30
  
  iotbroker.audit.enabled: true
  iotbroker.plugable:
    gateway:
      stomp:
        enable: true
      moquette:
        enable: true
        port: 1883
        pool: 200
        host: 0.0.0.0
        store: moquette_store_bin.mapdb
        outbound_topic: /topic/message
        subscription_topic: /topic/subscription
        command_topic: /topic/command
        inbound_topic: /queue/message
        ssl:
          enable: true
          port: 8883
          jks_path: develkeystore.jks
          keystore_password: changeIt!
          keymanager_password: changeIt!
        
      rest:
        enable: true
        swaggerhost: localhost:19000    
      kafka:
        enable: false
        host: localhost
        port: 9095
        user: admin
        password: admin-secret
        partitions: 4
        replication: 1
        prefix: ONTOLOGY_
        group: ontologyGroup
        topic.pattern: ONTOLOGY.*
        router.topic: router
        consumer.consumersCount : 10
        consumer.seekTo : beginning 
        consumer.group : kafkaGroup
        consumer.maxPollRecords : 200
        consumer.maxAge : 5000
        
        
## LOGGING CONF
logging:
   path: ./target/ 
   file: ${spring.application.name}
   level:
      com.minsait: DEBUG 
      org.springframework.boot: INFO
#      org.springframework.boot.autoconfigure: DEBUG

