server: ## Config Web Server
   port: 22000
   contextPath: /rtdbmaintainer
      
onesaitplatform:
   binary-repository:
      type: mongo
   rtdb-to-hdb:
      path: /usr/local/files/
   router.avoidsslverification: true
   router.alternativeURL: http://localhost:20000/router/router/
   locale.default: en
   encription.key: sofia2
   database.elasticsearch:
      database: onesaitplatform_rtdb_es
      sql.maxHttpConnections: 10
      sql.maxHttpConnectionsPerRoute: 10
      sql.connectionTimeout.millis: 10000
      sql.connector.http.endpoint: http://localhost:9200
      url: localhost
      port: 9300
      elasticdump.path: S:/node_modules/.bin/elasticdump.cmd
      dump.path: /tmp/export/
   database.mongodb:
      database: onesaitplatform_rtdb
      authenticationDatabase:  #admin
      servers: localhost:27017
      autoConnectRetry: true
      socketTimeout: 5000
      maxAutoConnectRetryTime: 5000
      maxWaitTime: 5000
      useAuth: false
      username: #username
      password: #password
      readFromSecondaries: false
      queries.executionTimeout: 5000
      queries.defaultLimit: 2000
      queries.maxConcurrentQueries: 3
      writeConcern: UNACKNOWLEDGED
      tools.mongoexport.path: mongoexport
      tools.mongoimport.path: mongoimport
      tools.mongoshell.path: mongo
      tools.useSequentialOps: true
      digitaltwin.database: digital_twin
      export.path: /tmp/export/
      mongoexport.path: s:/tools/mongo/bin/mongoexport
   
 
spring: ## General Config  
   application.name: onesaitplatform-rtdb-maintainer
   datasource: ## JPA Config
      url: jdbc:mysql://localhost:3306/onesaitplatform_config?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&autoReconnect=true
      username: root
      password: changeIt!
      # Number of ms to wait before throwing an exception if no connection is available.
      tomcat.max-wait: 10000
      # Maximum number of active connections that can be allocated from this pool at the same time.
      tomcat.max-active: 50
      # Validate the connection before borrowing it from the pool.
      tomcat.test-on-borrow: true
      test-on-borrow: true
      validation-query: SELECT 1
      test-while-idle: true      
   jpa:
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      hibernate.ddl-auto: validate
      hibernate.temp.use_jdbc_metadata_defaults: false
  

quartz:      
   datasource:
      url: jdbc:mysql://localhost:3306/onesaitplatform_scheduler?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
      username: root
      password: changeIt!
      driver-class-name: com.mysql.jdbc.Driver
      test-on-borrow: true
      validation-query: SELECT 1
      test-while-idle: true      
   jpa:
      ## Hibernate Properties
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      properties.hibernate.hbm2ddl.auto: update
   autoStartupSchedulers:
      - batchScheduler
      - okpiScheduler

## LOGGING CONF
logging:
   path: ./target/ 
   file: ${spring.application.name}
   level:
      com.minsait: INFO 
